
rule.php.CycleBetweenPackages.name=Avoid cycle between packages

rule.php.S1523.name="eval" function should not be used
rule.php.S107.name=Functions should not have too many parameters
rule.php.S107.param.max=Maximum authorized number of parameters
rule.php.S1479.name=Switch statements should not have too many case clauses
rule.php.S1479.param.max=Maximum number of case
rule.php.S1116.name=Empty statements should be removed
rule.php.S1145.name="if" statement conditions should not always evaluate to "true" or to "false"
rule.php.S1066.name=Collapsible "if" statements should be merged
rule.php.S1151.name="switch/case" clauses should not have too many lines
rule.php.S1151.param.max=Maximum Number of Lines
rule.php.S1142.name=Functions should not contain too many return statements
rule.php.S1142.param.max=Maximum allowed return statements per function
rule.php.S100.name=Function names should comply with a naming convention
rule.php.S100.param.format=Regular expression used to check the function names against
rule.php.S1126.name=Return of boolean expressions should not be wrapped into an "if-then-else" statement
rule.php.S1125.name=Literal boolean values should not be used in condition expressions
rule.php.S1599.name=Variable variables should not be used
rule.php.S131.name="switch" statements should end with a "case default" clause
rule.php.S1301.name="switch" statements should have at least 3 "case" clauses
rule.php.S1264.name=A "while" loop should be used instead of a "for" loop
rule.php.S139.name=Comments should not be located at the end of lines of code
rule.php.S139.param.legalTrailingCommentPattern=Description Pattern for text of trailing comments that are allowed
rule.php.S126.name="if ... else if" constructs shall be terminated with an "else" clause
rule.php.S104.name=Files should not have too many lines
rule.php.S104.param.max=Description: Maximum authorized lines in a file
rule.php.S103.name=Lines should not be too long
rule.php.S103.param.maximumLineLength=The maximum authorized line length.
rule.php.S108.name=Nested blocks of code should not be left empty
rule.php.S128.name=Switch cases should end with an unconditional break statement
rule.php.S1600.name=Deprecated predefined variables should not be used
rule.php.S134.name=Control flow statements "if", "for", "while", "switch" and "try" should not be nested too deeply
rule.php.S134.param.max= Maximum allowed "if", "for", "while", "switch" and "try" statements nesting depth
rule.php.S1192.name=String literals should not be duplicated
rule.php.S1192.param.threshold=Number of times a literals must be duplicated to trigger an issue
rule.php.S1541.name=Functions should not be too complex
rule.php.S1541.param.threshold=The maximum authorized complexity in functions.
rule.php.S105.name=Tabulation characters should not be used
rule.php.S1451.name=Copyright and license headers should be defined in all source files
rule.php.S1451.param.headerFormat=Expected copyright and license header (plain text)
rule.php.S1105.name=An open curly brace should be located at the end of a line
rule.php.S121.name="if/else/for/while/do" statements should always use curly braces
rule.php.S1109.name=Right curly braces should be located at the beginning of lines of code
rule.php.S907.name="goto" statement should not be used
rule.php.S101.name=Class names should comply with a naming convention
rule.php.S101.param.format=Regular expression used to check the class names against.
rule.php.S116.name=Field names should comply with a naming convention
rule.php.S116.param.format=Regular expression used to check the field names against.
rule.php.S1172.name=Unused function parameters should be removed
rule.php.S1067.name=Expressions should not be too complex
rule.php.S1067.param.max=Maximum number of allowed conditional operators in an expression
rule.php.S127.name=A loop's counter should not be assigned within the loop body
rule.php.S115.name=Constant names should comply with a naming convention
rule.php.S115.param.format=Regular expression used to check the constant names against.
rule.php.S138.name=Functions should not have too many lines
rule.php.S138.param.max=Maximum authorized lines in a function
rule.php.S1448.name=Classes should not have too many methods
rule.php.S1448.param.maximumMethodThreshold=The maximum number of methods
rule.php.S1311.name=Classes should not be too complex
rule.php.S1311.param.max=Maximum complexity allowed.
rule.php.S1135.name="TODO" tags should be handled
rule.php.S1134.name="FIXME" tags should be handled
rule.php.S1603.name=PHP 4 constructor declarations should not be used
rule.php.S1605.name=PHP 4 style calls to parent constructors should not be used in PHP5 "__construct" functions
rule.php.S1131.name=Lines should not end with trailing whitespaces
rule.php.S113.name=Files should contain an empty new line at the end
rule.php.S1068.name=Unused private fields should be removed
rule.php.S1481.name=Unused local variables should be removed
rule.php.S122.name=Statements should be on separate lines
rule.php.S1200.name=Classes should not be coupled to too many other classes (Single Responsibility Principle)
rule.php.S1200.param.max=Maximum number of classes a single class is allowed to depend upon
rule.php.S1106.name=An open curly brace should be located at the beginning of a line
rule.php.S881.name=Increment (++) and decrement (--) operators should not be mixed with other operators in an expression
rule.php.S1117.name=Local variables should not have the same name as class fields
rule.php.S117.name=Local variable and function parameter names should comply with a naming convention
rule.php.S117.param.format=Regular expression used to check the names against.
rule.php.S1488.name=Local variables should not be declared and then immediately returned or thrown
rule.php.S125.name=Sections of code should not be "commented out"
rule.php.S1793.name="elseif" keyword should be used in place of "else if" keywords
rule.php.S1799.name="exit(...)" and "die(...)" statements should not be used
rule.php.S1765.name=The "var" keyword should not be used
rule.php.S1784.name=Method visibility should be explicitly declared
rule.php.S1781.name=PHP keywords and constants "true", "false", "null" should be in lower case
rule.php.S1766.name=More than one property should not be declared per statement
rule.php.S1124.name=Modifiers should be declared in the correct order
rule.php.S1780.name=Closing tag "?>" should be omitted on files containing only PHP
rule.php.S1779.name=Only LF character (Unix-like) should be used to end lines
rule.php.S1788.name=Method arguments with default value should be last
rule.php.S1808.name=Source code should comply with formatting standards
rule.php.S1808.param.namespace_blank_line="namespace" declarations should be followed by a blank line
rule.php.S1808.param.use_after_namespace="use" declarations should be placed after "namespace" declarations
rule.php.S1808.param.use_blank_line="use" declarations should be follow by a blank line
rule.php.S1808.param.open_curly_brace_classes_functions=Open curly braces should be at the beginning of a new line for classes and functions
rule.php.S1808.param.open_curly_brace_control_structures=Open curly braces should be at the end of line for control structures
rule.php.S1808.param.one_space_after=There should be exactly one space between closing parenthesis and opening curly braces
rule.php.S1808.param.one_space_before=There should be exactly one space between control structure keyword and opening parenthesis or curly brace
rule.php.S1808.param.closing_curly_brace=Close curly brace and the next "else", "catch" and "finally" keywords should be located on the same line
rule.php.S1808.param.one_space_for=There should be one space after each ";" in "for" statement
rule.php.S1808.param.space_comma=Commas should be followed by one space and not preceded by any
rule.php.S1808.param.no_space_method_name=There should not be any space after a method name
rule.php.S1808.param.foreach_space=In foreach statement there should be one space before and after "as" keyword and "=>" operator
rule.php.S1808.param.no_space=There should not be any space after the opening parenthesis and before the closing parenthesis
rule.php.S1808.param.closure_format=Closures declaration should be correctly spaced
rule.php.S1808.param.function_declaration_arguments_indentation=Arguments in a method/function declaration should be correctly indented
rule.php.S1808.param.function_calls_arguments_indentation=Arguments in method/function calls should be correctly indented
rule.php.S1808.param.interfaces_indentation=List of implemented interfaces should be correctly indented
rule.php.S1808.param.extends_implements_line=Class names, "extends" and "implements" keywords should be located on the same line
rule.php.S1757.name="<?php" and "<?=" tags should be used

# Common rules
rule.common-php.InsufficientBranchCoverage.name=Insufficient branch coverage by unit tests
rule.common-php.InsufficientBranchCoverage.param.minimumBranchCoverageRatio=The minimum required branch coverage ratio.
rule.common-php.InsufficientCommentDensity.name=Source files should have a sufficient density of comment lines
rule.common-php.InsufficientCommentDensity.param.minimumCommentDensity=The minimum required comment density.
rule.common-php.DuplicatedBlocks.name=Source files should not have any duplicated blocks
rule.common-php.InsufficientLineCoverage.name=Insufficient line coverage by unit tests
rule.common-php.InsufficientLineCoverage.param.minimumLineCoverageRatio=The minimum required line coverage ratio.
rule.common-php.FailedUnitTests.name=Failed unit tests should be fixed
rule.common-php.SkippedUnitTests.name=Skipped unit tests should be either removed or fixed
